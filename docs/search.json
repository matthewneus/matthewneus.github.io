[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/test-post/index.html",
    "href": "posts/test-post/index.html",
    "title": "First Post!",
    "section": "",
    "text": "This is my first post to this site. Here’s some code:\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nattendance &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/attendance.csv\")"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sportsblog",
    "section": "",
    "text": "…against same-level competition\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nNov 13, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nMaryland’s Good Defense Can Lead It To a NCAA Tournament Birth\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nNov 8, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nRunning the Football Doesn’t Always Mean Success in the Big Ten\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nNov 6, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nMaryland volleyball struggled to win points directly from serves in 2023\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 24, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nMaryland’s Offense Succeeds, But Its Defense Has Work to do in 2024\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 23, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nBig Ten Teams Find Recent Success Without Lethal Rushing Attacks\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 22, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nRunning on 3rd and Six Doesn’t Lead to First Downs\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 16, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nMaryland’s superior points earned results in worse conference record than UCLA\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 10, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nMaryland football runs on average the most offensive plays in new-look Big Ten\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 8, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 1, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nFirst Post!\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 1, 2024\n\n\nMatthew Neus\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 28, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/big-ten-average-offensive-plays/index.html",
    "href": "posts/big-ten-average-offensive-plays/index.html",
    "title": "Maryland football runs on average the most offensive plays in new-look Big Ten",
    "section": "",
    "text": "Here I loaded in both data sets for the entire 2023 college football season and the available data for the current 2024 season.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ncfb23 &lt;- read.csv(\"https://thescoop.org/sports-data-files/footballlogs23.csv\")\ncfb24 &lt;- read.csv(\"https://thescoop.org/sports-data-files/footballlogs24.csv\")\n\n\nLooking at the 2023 data, I wanted to look at just Big Ten teams and the average offensive plays they ran during the year. I grouped the data by each team, found the mean of each team’s total offensive plays ran, and then filtered the data to just include Big Ten teams.\nFrom there, I arranged the data to see the team that averaged the most offensive plays, sorted the data to just show that average and the team, and used “distinct()” to get rid of any duplicate data.\n\n\nCode\ncfb23 &lt;- cfb23 |&gt;\n  group_by(Team) |&gt;\n  mutate(\n    avg_off_plays = mean(OffensivePlays)\n  ) |&gt;\n  filter(Conference == 'Big Ten Conference')\n\nbigten23 &lt;- cfb23 |&gt;\n  arrange(desc(avg_off_plays)) |&gt;\n  select(Team, avg_off_plays) |&gt;\n  distinct()\n\n\nI followed the same steps steps I did for the 2023 data for the 2024 data, even though the season is still happening.\n\n\nCode\ncfb24 &lt;- cfb24 |&gt;\n  group_by(Team) |&gt;\n  mutate(\n    avg_off_plays = mean(OffensivePlays)\n  ) |&gt;\n  filter(Conference == 'Big Ten Conference')\n\nbigten24 &lt;- cfb24 |&gt;\n  arrange(desc(avg_off_plays)) |&gt;\n  select(Team, avg_off_plays) |&gt;\n  distinct()\n\n\nHere is a bar chart that shows the average of offensive plays each team ran in 2023. I used the team name as my x-axis and the average number of offensive plays for my y-axis. I weighted the bar chart by the average offensive plays and arranged it to show a rise from the team with the lowest average of offensive plays to the most.\n\n\nCode\nggplot() +\n  geom_bar(\n    data=bigten23, \n    aes(\n      x=reorder(Team, avg_off_plays), \n      weight=avg_off_plays\n      )\n  )\n\n\n\n\n\n\n\n\n\nI followed the same steps I did for the 2023 data for the 2024 data, even though the season is still happening.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=bigten24, \n    aes(\n      x=reorder(Team, avg_off_plays), \n      weight=avg_off_plays\n      )\n    )\n\n\n\n\n\n\n\n\n\n– Maryland’s offense is on the field for more plays than any other Big Ten team so far in 2024. The Terps averaged around 72 offensive plays per game through five games, up from their average of 66 offensive plays throughout the entire 2023 season. Maryland’s has played an FCS school and a non-power five school during its first five games of 2024, which may be aiding the increase of offensive possessions.\nPurdue’s offense has underwent one of the worst xx in the Big Ten so far in 2024. The Boilermakers ranked second in 2023 for average offensive plays, but rank last so far in 2024 through five games."
  },
  {
    "objectID": "posts/big-ten-volleyball-points/index.html",
    "href": "posts/big-ten-volleyball-points/index.html",
    "title": "Maryland’s superior points earned results in worse conference record than UCLA",
    "section": "",
    "text": "UCLA has fared better in its first five games against Big Ten competition than Maryland has, despite the Bruins scoring less points than the Terps.\nMaryland has benefited from more points won courtesy of its attack, in kills and aces, and has been gifted more points from its opponents own errors compared to UCLA. But, the Bruins have began life in the Big Ten with two wins to the Terps’ one.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nHere I loaded volleyball data for every team so far this season.\n\n\nCode\nvolleyball24 &lt;- read.csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_matchstats_2024.csv\")\n\n\nI filtered the data to just see Maryland’s stats through its first 15 games. I then added the total number of kills, blocks, aces and opponent errors to see how many points the Terps have won so far.\n\n\nCode\nmd24 &lt;- volleyball24 |&gt;\n  filter(team == 'Maryland')\n\nmd24 |&gt;\n  summarise(\n    totalkills = sum(kills),\n    totalblocks = sum(block_solos + block_assists),\n    totalaces = sum(aces),\n    totalopponenterrors = sum(defensive_errors)\n  )\n\n\n  totalkills totalblocks totalaces totalopponenterrors\n1        714         253       127                 323\n\n\nI did the same filtering and adding with UCLA, a Big Ten newcomer, to see how one of the conference’s newest additions is faring so far.\n\n\nCode\nucla24 &lt;- volleyball24 |&gt;\n  filter(team == 'UCLA')\n\nucla24 |&gt;\n  summarise(\n    totalkills = sum(kills),\n    totalblocks = sum(block_solos + block_assists),\n    totalaces = sum(aces),\n    totalopponenterrors = sum(defensive_errors)\n  )\n\n\n  totalkills totalblocks totalaces totalopponenterrors\n1        724         232        69                 281\n\n\nI wanted to make a waffle chart to compare the amount of points won by Maryland and UCLA. To do so, I had to load the waffle library in order to make these charts.\n\n\nCode\nlibrary(waffle)\n\n\nI combined the totals for kills, aces and blocks for both teams. I did this because these are the points that each team earns for itself. I then added the total number of opponent errors each team, as these are points both team’s have been awarded for the mistakes of their opponents.\n\n\nCode\nmd &lt;- c(\"Kills, Aces, Blocks\"=1094, \"Opponent Errors\"=323)\nucla &lt;- c(\"Kills, Aces, Blocks\"=933, \"Opponent Errors\"=261, 233)\n\n\nThis is where I made the waffle charts. I put both waffle charts in an “iron” so I could see both side by side. I divided both vectors, the Maryland and UCLA data, by four so the data would display properly. The amount of points Maryland won through kills, aces and blocks is in red, while their opponents errors are in black. Same for UCLA, except I used light blue for their points won. These waffle charts so that Maryland has been awarded more points than UCLA.\nMaryland has won 1094 points from kills, aces and blocks, and 323 from opponent errors for 1,417 total points. UCLA has only won 933 points from kills, aces and blocks, and 261 from opponent errors for 1,194 points, 233 fewer points than the Terps.\n\n\nCode\niron(\n  waffle(md/4,\n         rows = 10,\n         title = \"Maryland's Points Earned\",\n         xlab = \"1 square = 1 point\",\n         colors = c(\"red\", \"black\")\n  ),\n  waffle(ucla/4,\n         rows = 10,\n         title = \"UCLA's Points Earned\",\n         xlab = \"1 square = 1 point\",\n         colors = c(\"lightblue\", \"black\", \"white\")\n  )\n)\n\n\n\n\n\n\n\n\n\nMaryland won more than 200 points over UCLA so far this season, yet both teams have similar overall records and the Bruins have one more win than the Terps in conference play. Earning points is one way teams win more volleyball matches than they lose, but Maryland hasn’t done a good job at turning its points earned into wins."
  },
  {
    "objectID": "posts/third-and-six/index.html",
    "href": "posts/third-and-six/index.html",
    "title": "Running on 3rd and Six Doesn’t Lead to First Downs",
    "section": "",
    "text": "When Maryland attempted to pick up six or more yards late in the fourth quarter against Illinois in 2023, some defended coach Michael Locksley’s decision because of the success the Terps had on the ground against the Illini. The Terps didn’t convert on the 3rd down try, and ended up losing to Illinois.\nMaryland’s track record when rushing on 3rd and six in Lockley’s tenure suggested that a passing play would have had a better chance at a conversion. The Terps routinely struggle to move the chains when running on 3rd and six, and much of the Big Ten share similar struggles.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(cfbfastR)\n\n\nHere we load the play-by-play data for the complete season’s from 2019-2023, and all the games played so far in 2024.\n\n\nCode\npbp_data &lt;- load_cfb_pbp(\n  seasons = c(2019, 2020, 2021, 2022, 2023, 2024)\n)\n\n\nFrom that data, I filtered the data to only show plays that were ran on 3rd and six. From 2019-2024, there were 15,661 plays ran in college football on 3rd and six.\n\n\nCode\nthird_and_six &lt;- pbp_data |&gt;\n  filter(\n    down == \"3\",\n    distance == \"6\"\n  )\n\n\nFrom those plays, there were 22 different play types that occurred. 3,173 were rushes and 135 were rushing touchdowns. The most common play ran on 3rd and six were passes that ended in completion, followed by passes ending in incompletions.\n\n\nCode\nthird_and_six_play_types &lt;- third_and_six |&gt;\n  group_by(play_type) |&gt;\n  summarise(\n    total = n()\n  )\n\n\nOf those 3,308 total runs on 3rd and six, teams only rushed on that down and distance 21 percent of the time.\n\n\nCode\nthird_and_six_play_types |&gt;\n  mutate(\n    percentage = total / 15661 * 100\n  ) |&gt;\n  arrange(desc(percentage))\n\n\n# A tibble: 22 × 3\n   play_type                  total percentage\n   &lt;chr&gt;                      &lt;int&gt;      &lt;dbl&gt;\n 1 Pass Reception              4676     29.9  \n 2 Pass Incompletion           3866     24.7  \n 3 Rush                        3173     20.3  \n 4 Penalty                     1068      6.82 \n 5 Timeout                      929      5.93 \n 6 Sack                         800      5.11 \n 7 Passing Touchdown            496      3.17 \n 8 Interception Return          257      1.64 \n 9 Rushing Touchdown            135      0.862\n10 Fumble Recovery (Opponent)   101      0.645\n# ℹ 12 more rows\n\n\nOf the 3,308 running plays that occured on 3rd and six, team’s average a gain of just over six yards.\n\n\nCode\nthird_and_six_rushes &lt;- third_and_six |&gt;\n  filter(play_type == \"Rush\" | play_type == \"Rushing Touchdown\")\n\nthird_and_six_rushes |&gt;\n  summarise(\n    avg_yds_gained = mean(yards_gained)\n  )\n\n\n# A tibble: 1 × 1\n  avg_yds_gained\n           &lt;dbl&gt;\n1           6.17\n\n\nNavy, Army and Air Force led Division I in run plays on 3rd and six, which was expected from the service academies. Georgia Southern and Ole Miss rounded out the top five as the most run-heavy teams on that specific down and distance. Maryland, from 2019-2024, has only ran 17 run plays on 3rd and six.\n\n\nCode\nthird_and_six_rushes |&gt;\n  group_by(pos_team) |&gt;\n  summarise(\n    total = n()\n  ) |&gt;\n  arrange(desc(total))\n\n\n# A tibble: 280 × 2\n   pos_team         total\n   &lt;chr&gt;            &lt;int&gt;\n 1 Navy                59\n 2 Army                51\n 3 Air Force           42\n 4 Georgia Southern    34\n 5 Ole Miss            31\n 6 Kent State          30\n 7 New Mexico          30\n 8 Baylor              29\n 9 Louisiana           29\n10 Georgia Tech        28\n# ℹ 270 more rows\n\n\nMaryland’s 17 rushes on 3rd and six have primarily come before the 2024 season. The Terps have only run once on a 3rd and six so far this season, which came in the second quarter against UConn when they were already up 14-0. Maryland failed to convert the third down try, and haven’t tried running from six yards on 3rd down since.\nThat run has been the only rush on 3rd and six since Maryland’s decision to run it late against Illinois in 2023, which they ended up losing a yard on and ultimately the game.\n\n\nCode\nthird_and_six_rushes_maryland &lt;- third_and_six_rushes |&gt;\n  filter(pos_team == \"Maryland\")\n\nthird_and_six_rushes_maryland_suc &lt;- third_and_six_rushes_maryland |&gt;\n  mutate(\n    conversionyes = yards_gained &gt; \"6\",\n    conversionno = yards_gained &lt;= \"6\",\n  ) |&gt;\n  summarise(\n    ConversionsSuccessful = sum(conversionyes),\n    ConversionsFailed = sum(conversionno),\n    team = pos_team\n  ) -&gt; firstdowns\n\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\n\nCode\nfirstdowns |&gt;\n  pivot_longer(\n    cols = starts_with(\"conversions\"),\n    names_to = \"convert\",\n    values_to = \"first\"\n  ) -&gt; firstdownrate\n\n\nLooking at the data from 2019 to this season, Maryland ran the ball on 3rd and six 17 times. Seeing how often they convert these opportunies for first downs, I mutated the data to say the Terps converted the third down chance if they gained more than six yards, or they failed if they gained six yards or less. They failed to convert the 3rd and six 13 different times.\n\n\nCode\nlibrary(scales)\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\nggplot() +\n  geom_bar(\n    data = firstdownrate,\n    aes(x=team, weight = first, fill = convert)\n  ) +\n  coord_flip() + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"Maryland's Success Running on 3rd and Six\", \n)\n\n\n\n\n\n\n\n\n\nI’ve opted to not include the four new members of the Big Ten in 2024 because they would only add data for this season’s games so far. I’m including the 14 teams that have been in the Big Ten since 2019.\n\n\nCode\nbigten &lt;- c(\"Indiana\", \"Michigan\", \"Ohio State\", \"Penn State\", \"Maryland\", \"Rutgers\", \"Michigan State\", \"Iowa\", \"Northwestern\", \"Wisconsin\", \"Illinois\", \"Minnesota\", \"Nebraska\", \"Purdue\")\n\n\n\n\nCode\nthird_and_six_rushes_b1g&lt;- third_and_six_rushes |&gt;\n  filter(pos_team %in% bigten)\n\n\n\n\nCode\nthird_and_six_rushes_b1g_suc &lt;- third_and_six_rushes_b1g |&gt;\n  mutate(\n    conversionyes = yards_gained &gt; \"6\",\n    conversionno = yards_gained &lt;= \"6\",\n  ) |&gt; group_by(pos_team) |&gt;\n  summarise(\n    ConversionsSuccessful = sum(conversionyes),\n    ConversionsFailed = sum(conversionno),\n    team = pos_team,\n  ) -&gt; firstdownsb1g\n\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n`summarise()` has grouped output by 'pos_team'. You can override using the\n`.groups` argument.\n\n\n\n\nCode\nfirstdownsb1g |&gt;\n  pivot_longer(\n    cols = starts_with(\"conversions\"),\n    names_to = \"convert\",\n    values_to = \"first\"\n  ) -&gt; firstdownrateb1g\n\nggplot() +\n  geom_bar(\n    data = firstdownrateb1g,\n    aes(x=reorder(team, first),weight = first, fill = convert)\n  ) +\n  coord_flip() + \n  scale_y_continuous(labels=comma) + \n  labs(\n    title=\"The Big Ten's Success of Running on 3rd and Six\",\n)\n\n\n\n\n\n\n\n\n\nNebraska opted to run the most when faced with a 3rd and six, with little success like the rest of the conference from 2019-2024. Maryland is one of the best teams when it comes to converting 3rd and six scenarios on the ground, yet they’ve only achieved four of 17. Some teams, like Minnesota and Michigan State, have failed in every attempt to gain more than six yards on 3rd down and six when rushing.\nWhen Big Ten teams are faced with 3rd and six situations, they opt to pass the ball more than run it. And when they do decide to run it, they often fail to pick up more than the necessary six yard to get a first down. Running the football on 3rd and six normally leads to a fourth down, which could be the difference in a win or loss like Maryland against Illinois last year."
  },
  {
    "objectID": "posts/close-rushing-wins/index.html",
    "href": "posts/close-rushing-wins/index.html",
    "title": "Big Ten Teams Find Recent Success Without Lethal Rushing Attacks",
    "section": "",
    "text": "The ACC used to be dominant in winning games without utilizing he running game. Now, the Big Ten has mastered the art of winning without a strong rushing attack.\nBig Ten teams won 19 games in 2021, the most of any conference from 2011 to this season. The conference team’s followed that with 16 wins in 2022 and 15 triumphs in 2023, and are on pace to post a similar number this season by already achieving nine wins when recording less than 100 rushing yards.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggplot2)\n\n\n\n\nCode\ncfb_logs &lt;- read_csv(\"https://thescoop.org/sports-data-files/footballlogs1124.csv\")\n\n\nRows: 21592 Columns: 55\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (46): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nHere I added a log for wins and losses for each team, then I filtered that data to only include games when teams rush less than 100 yards.\n\n\nCode\nwinlosslogs &lt;- cfb_logs |&gt;\n  mutate(\n    wins = case_when(\n      grepl(\"W\", Outcome) ~ 1,\n      grepl(\"L\", Outcome) ~ 0\n    )\n  )\n\n\n\n\nCode\ngamesperszn &lt;- cfb_logs |&gt;\n  group_by(Season) |&gt;\n  summarise(\n    sum(Season)\n  )\n\n\n\n\nCode\nnorush &lt;- cfb_logs |&gt;\n  group_by(Team, RushingYds) |&gt;\n  filter(RushingYds &lt; 100) |&gt;\n  mutate(\n    wins = case_when(\n      grepl(\"W\", Outcome) ~ 1,\n      grepl(\"L\", Outcome) ~ 0\n    )\n  )\n\n\n\n\nCode\nnorushwins &lt;- norush |&gt;\n  filter(wins == 1)\n\n\nBy comparing each conference against each other in the amount of wins with less than 100 rushing yards per season since 2011, ACC teams were once great at winning games without needing a rushing attack. Now, the Big Ten is taking over.\n\n\nCode\ndata &lt;- (norushwins) |&gt; group_by(Season,Conference) |&gt; summarize(Wins = n())\n\n\n`summarise()` has grouped output by 'Season'. You can override using the\n`.groups` argument.\n\n\nCode\nBigTen &lt;- data |&gt; filter(Conference == \"Big Ten Conference\")\nSEC &lt;- data |&gt; filter(Conference ==\"Southeastern Conference\")\nCUSA &lt;- data |&gt; filter(Conference ==\"Conference USA\")\nBig12 &lt;- data |&gt; filter(Conference ==\"Big 12 Conference\")\nInd &lt;- data |&gt; filter(Conference ==\"Independent\")\nMAC &lt;- data |&gt; filter(Conference ==\"Mid-American Conference\")\nPAC12 &lt;- data |&gt; filter(Conference ==\"Pac-12 Conference\", Conference == \"Pacific-12 Conference\")\nBigEast &lt;- data |&gt; filter(Conference ==\"Big East Conference\")\nSunBelt &lt;- data |&gt; filter(Conference ==\"Sun Belt Conference\")\nMWC &lt;- data |&gt; filter(Conference ==\"Mountain West Conference\")\nWAC &lt;- data |&gt; filter(Conference ==\"Western Athletic Conference\")\nACC &lt;- data |&gt; filter(Conference == \"Atlantic Coast Conference\")\n\nggplot(data) +\n  geom_line(data = SEC, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = CUSA, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = Big12, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = Ind, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = MAC, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = PAC12, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = BigEast, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = SunBelt, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = MWC, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_line(data = WAC, aes(x = Season, y = Wins), color = \"gray\") +\n  geom_point(data = BigTen, aes(x = Season, y = Wins, color = \"Big Ten\")) +\n  geom_line(data = BigTen, aes(x = Season, y = Wins, color = \"Big Ten\")) +\n  geom_point(data = ACC, aes(x = Season, y = Wins, color = \"ACC\")) +\n  geom_line(data = ACC, aes(x = Season, y = Wins, color = \"ACC\")) +\n \n  labs(title = \"Big Ten teams are recently winning more games with less than 100 rushing yards\",\n       x = \"Season\",\n       y = \"Sub-100 Yard Rushing Wins\",\n       color = \"Conference\") +  # Label for the legend\n  scale_color_manual(values = c(\"Big Ten\" = \"blue\", \"ACC\" = \"red\")) +  # Custom colors for Big Ten and ACC\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThe ACC used to find success without a running game from 2011 to 2017. The teams in the conference racked up 85 victories over that span, but only won 63 contests since.\nThe Big Ten has taken over for the ACC, in large part thanks to Iowa and Purdue. The Boilermakers won a conference best six games without hitting over 100 yards on the ground in 2021, leading to the Big Ten having the most wins in a single season with less than 100 years. Iowa contributed three games that year, and Penn State added four.\nBut 2021 was a outlier for Purdue, who haven’t won more than two games in a season hitting the rushing lows, and for Penn State, who has won just two games with under 100 rushing yards in 2022 and 2023. But, the Hawkeyes have come out on top in six games during 2022 and 2023, showing they are still one of the premier teams in the Big Ten to win with less than 100 yards rushing.\n\n\nCode\nnorushloss &lt;- norush |&gt;\n  filter(wins == 0)\n\n\nWhen teams rush for less than 100 yards, they only win 21 percent of the time. In the Big Ten, it only rises slightly to 22 percent. It’s only happened 126 times for Big Ten teams when they win and rush less than 100 yards.\n\n\nCode\nwinpct &lt;- nrow(norushwins) / nrow(norush) \nwinpct\n\n\n[1] 0.212356\n\n\n\n\nCode\nb1gwins &lt;- norushwins |&gt;\n  filter(Conference == \"Big Ten Conference\")\n\nb1gtotal &lt;- norush |&gt;\n  filter(Conference == \"Big Ten Conference\")\n\n\n\n\nCode\nb1gwinpct &lt;- nrow(b1gwins) / nrow(b1gtotal)\nb1gwinpct\n\n\n[1] 0.2206655\n\n\n\n\nCode\nb1gdata &lt;- (norushwins) |&gt; group_by(TeamFull,Conference) |&gt; summarize(Wins = n())\n\n\n`summarise()` has grouped output by 'TeamFull'. You can override using the\n`.groups` argument.\n\n\nCode\nillinois &lt;- b1gdata |&gt; filter(TeamFull == \"Illinois Fighting Illini\")\nindiana &lt;- b1gdata |&gt; filter(TeamFull ==\"Indiana Hoosiers\")\niowa &lt;- b1gdata |&gt; filter(TeamFull ==\"Iowa Hawkeyes\")\nmaryland &lt;- b1gdata |&gt; filter(TeamFull ==\"Maryland Terrapins\")\nmichiganstate &lt;- b1gdata |&gt; filter(TeamFull ==\"Michigan State Spartans\")\nmichigan &lt;- b1gdata |&gt; filter(TeamFull ==\"Michigan Wolverines\")\nminnesota &lt;- b1gdata |&gt; filter(TeamFull ==\"Minnesota Golden Gophers\")\nnebraska &lt;- b1gdata |&gt; filter(TeamFull ==\"Nebraska Cornhuskers\")\nnorthwestern &lt;- b1gdata |&gt; filter(TeamFull ==\"Northwestern Wildcats\")\nohiostate &lt;- b1gdata |&gt; filter(TeamFull ==\"Ohio State Buckeyes\")\npennstate &lt;- b1gdata |&gt; filter(TeamFull == \"Penn State Nittany Lions\")\npurdue &lt;- b1gdata |&gt; filter(TeamFull == \"Purdue Boilermakers\")\nrutgers &lt;- b1gdata |&gt; filter(TeamFull == \"Rutgers Scarlet Knights\")\nucla &lt;- b1gdata |&gt; filter(TeamFull == \"UCLA Bruins\")\nusc &lt;- b1gdata |&gt; filter(TeamFull == \"USC Trojans\")\nwisconsin &lt;- b1gdata |&gt; filter(TeamFull == \"Wisconsin Badgers\")\n\n\nJust having a potent passing attack won’t produce many wins for college football teams. Some teams, like Iowa, can have bad running games and still pull out wins, although it doesn’t happen often.\nTo win in college football, an offense needs to put up yards both on the ground and through the air. Big Ten teams may be better suited to win without running, but teams must mix both rushing and passing to succeed."
  },
  {
    "objectID": "posts/maryland-football-ypp/index.html",
    "href": "posts/maryland-football-ypp/index.html",
    "title": "Maryland’s Offense Succeeds, But Its Defense Has Work to do in 2024",
    "section": "",
    "text": "Maryland football didn’t know what direction its offense would go in when Taulia Tagovailoa departed the program in the offseason. Billy Edwards Jr. stepped under center to assume the starting quarterback responsibilities, and has led a successful offense so far in 2024.\nBut on the other side of the ball, the Terps haven’t been good at stopping their opponents. It’s been a contributor to Maryland’s poor start to the season.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ncfb_logs &lt;- read_csv(\"https://thescoop.org/sports-data-files/footballlogs1124.csv\")\n\n\nRows: 21592 Columns: 55\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (46): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\ncfb_logs_md &lt;- cfb_logs |&gt;\n  filter(TeamFull == \"Maryland Terrapins\")\n\n\n\n\nCode\nmd_winlosslogs &lt;- cfb_logs_md |&gt;\n  mutate(\n    wins = case_when(\n      grepl(\"W\", Outcome) ~ 1, \n      grepl(\"L\", Outcome) ~ 0)\n)\n\npre2024 &lt;- c(\"Season\" = \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2022\", \"2021\", \"2022\", \"2023\", \"2011\")\n\nmd_winlosslogs |&gt; \n  group_by(TeamFull, Season) |&gt; \n  summarise(\n    TotalPlays = sum(OffensivePlays), \n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards), \n    TotalWins = sum(wins)) |&gt; \n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays) -&gt; ypp\n\n\n`summarise()` has grouped output by 'TeamFull'. You can override using the\n`.groups` argument.\n\n\nCode\nmd_winlosslogs |&gt; \n  group_by(TeamFull, Season) |&gt;\n  filter(Season %in% pre2024) |&gt;\n  summarise(\n    TotalPlays = sum(OffensivePlays), \n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards), \n    TotalWins = sum(wins)) |&gt; \n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays) -&gt; md_ypp\n\n\n`summarise()` has grouped output by 'TeamFull'. You can override using the\n`.groups` argument.\n\n\nCode\nmd_winlosslogs |&gt; \n  group_by(TeamFull, Season) |&gt;\n  filter(Season == \"2024\") |&gt;\n  summarise(\n    TotalPlays = sum(OffensivePlays), \n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards), \n    TotalWins = sum(wins)) |&gt; \n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays) -&gt; md24_ypp\n\n\n`summarise()` has grouped output by 'TeamFull'. You can override using the\n`.groups` argument.\n\n\nMaryland’s 2021 offense was its best since 2011, averaging almost 6.2 yards per play. But, its defense allowed 5.7 yards per play to the Terps’ opponents. Despite the high yardage given up, the Terps won eight games in 2021, the most in the 12-year stretch.\n2012 was the worst offensive year for Maryland. It only gained 4.4 yards a play. But on defense, they only gave up 4.9 yards per plays. Yet the good defense only won the Terps four games.\nMaryland’s best all-around season was 2023 when they won eight games and a third consecutive bowl game. Maryland gained just under six yards a play and only gave up 4.9 yards per down. It led them to another successful season under coach Michael Locksley.\n\n\nCode\nlibrary(ggrepel)\n\nggplot() + \n  geom_point(\n    data=md_ypp, aes(x=OffensiveYPP, y=DefensiveYPP)\n    ) +\n  geom_text_repel(\n    data=md_ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, label=Season)\n  )\n\n\n\n\n\n\n\n\n\nMaryland’s offense has averaged 5.6 yards a play since 2011, while its defense has given up 5.5 yards on defense. The similarities in yards gained and allowed per play has contributed to season’s hovering around a .500 mark.\n\n\nCode\nypp |&gt; \n  ungroup() |&gt; \n  summarise(\n    offense = mean(OffensiveYPP), \n    defense = mean(DefensiveYPP)\n    )\n\n\n# A tibble: 1 × 2\n  offense defense\n    &lt;dbl&gt;   &lt;dbl&gt;\n1    5.62    5.45\n\n\nSince the 2024 season hasn’t ended yet, I’ve marked this year’s stats with a gold dot.\nMaryland’s offense this year is one of its best performing offensives since 2011. It is averaging almost six yards a play, yet one of those games came against an FCS school and another against UConn, who has one four games so far in 2024.\nBut the Terps’ defense raises concerns. Teams average 5.6 yards a play against Maryland, which would be one of the highest averages given up by the Terps if the season was over.\n\n\nCode\nggplot() + \n  geom_point(\n    data=md24_ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins), \n    color=\"gold\", \n    alpha=.5) + \n  geom_point(\n    data=md_ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins), \n    color=\"red\") + \n  geom_vline(xintercept = 5.617601) + \n  geom_hline(yintercept = 5.45072   ) +\n  geom_text_repel(\n    data=md_ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, label=Season)\n  ) + \n  labs(title=\"Will Maryland's Offense Lead It to a Six-Plus Win Campaign?\", subtitle=\"The Terps' 2024 offense is one of their best since 2011, but their defense is not.\", caption=\"Source: NCAA | By Matthew Neus | 2024 incomplete season in gold\")  + theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\n\n\nThe Terps’ offense under Edwards Jr. is excelling. Averaging over five yards a play suggests Maryland moves the football down the field at most times with ease. But the Terps’ defense is a lingering problem.\nMaryland continuing its high marks on offense will ensure another return to a bowl game, as suggested by past season’s results like in 2018, 2013 and even 2016. But there needs to be an improvement on defense. For the Terps to take the next step toward being an elite program in college football, allowing less yards a play is necessary."
  },
  {
    "objectID": "posts/volleyball-aces/index.html",
    "href": "posts/volleyball-aces/index.html",
    "title": "Maryland volleyball struggled to win points directly from serves in 2023",
    "section": "",
    "text": "Maryland volleyball faltered from the service line last season. They ranked in the middle of the Big Ten in total service aces as a team, but three of its servers were behind the rest of the countries elite servers in winning service aces per match.\nIt led to another disappointing season where the Terps struggled to rack up points, and wins.\n\n\nCode\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggbeeswarm)\nlibrary(ggrepel)\nset.seed(1234)\n\nvblogs &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_playerstats_2023.csv\") |&gt; clean_names()\n\nvblogs_20 &lt;- vblogs |&gt;\n  filter(mp &gt;= 20, !is.na(aces), !is.na(pos))\n\nvblogs_20 &lt;- vblogs_20 |&gt;\n  mutate(acespm = aces/mp)\n\nservers &lt;- vblogs_20 |&gt;\n  filter(acespm &gt; 0.8529)\n\numdvb &lt;- vblogs_20 |&gt; \n  filter(team == \"Maryland Terrapins, Terps\") |&gt; \n  filter(acespm&gt;0.8529) |&gt; \n  arrange(desc(acespm))\n\n\nIn the NCAA for volleyball players that played at least 20 matches during the 2023 season, the average aces per set was just over half an ace. For the top servers in the nation, it was just under one ace a match, or 0.85. The best player in the country racked up an average of over two aces per match, but that athlete didn’t represent Maryland.\nI’ve used players from the higher echelon of servers for this chart. Good servers lead to more aces and points, which separates the good teams from the bad.\n\n\nCode\nggplot() + \n  geom_quasirandom(\n    data=servers, \n    groupOnX=TRUE, \n    aes(x=pos, y=acespm), color=\"grey\") + \n  geom_quasirandom(\n    data=umdvb, \n    groupOnX=TRUE, \n    aes(x=pos, y=acespm), color=\"red\") +\n  geom_text_repel(\n    data=umdvb, \n    aes(x=pos, y=acespm, label=full_name)) +\n  labs(title=\"Did few aces lead to another down year for Maryland volleyball?\", subtitle=\"Three Terps hit over 0.85 aces a match, but ranked at the bottom of their respective position groups.\", caption=\"Source: NCAA | By Matthew Neus\")  + theme_minimal() + \n  theme(\n    plot.title = element_text(size = 10, face = \"bold\"),\n    axis.title = element_text(size = 6), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\n\n\nThree Maryland players averaged over 0.85 aces a match. Sam Csire, a outside hitter, and Erin Engel, a setter, achieved a mark of just under one ace per match, at 0.94 and 0.97 respectively. Many other setters and outside hitters accomplished similar feats, not separating Csire or Engel apart from anyone in the country.\nDefensive Specialist Lilly Gunter was the Terps’ best server when it came to achieving aces per match. She averaged over one ace a match at 1.03. But like Csire and Engel, she ranked among the bottom of defensive specialists to average over 0.85 aces a match, although there were fewer to qualify as being a good server.\n\n\nCode\nsummary(vblogs_20$acespm)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.1200  0.5172  0.5460  0.8529  2.3448 \n\n\nService aces can be incredibly important for successful teams. Aces eliminate the chance of errors on offense and defense, and they can help spur scoring runs for offensives to use toward wining sets and matches.\nHaving solid servers that average high amounts of aces every match is crucial. Maryland failed to receive much help from the service line. Only three of its servers averages over 0.85 aces a match, and all three ranked in the bottom tier in their position groups.\nAs a result, the Terps didn’t improve in 2023. Hitting more aces is a way that Maryland can improve and advance as a program in a tough Big Ten Conference. A repeat of its serving from 2023 in 2024 will suggest another poor year will occur."
  },
  {
    "objectID": "posts/running-on-empty/index.html",
    "href": "posts/running-on-empty/index.html",
    "title": "Running the Football Doesn’t Always Mean Success in the Big Ten",
    "section": "",
    "text": "Running the football doesn’t lead to wins. It can help spur an offense, but some of the best rushing teams in the Big Ten aren’t near the top of the conference.\nUSC, one of the conference’s newcomers, has gained more yards per play on the ground above the Big Ten average in seven of its nine contests. The Trojans have only won four games this season, and three of those victories came when they ran for over 4.3 yards per carry.\nPurdue, one of the worst teams in the Big Ten, has averaged more than seven yards a play rushing in three separate games this year. The Boilermakers have only won one of those contests. They averaged 8.8 yards a run against Oregon State, the second-highest average by a Big Ten team this season. They only scored 21 points in a 17-point loss.\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\ncfb_pbp &lt;- read_csv(\"https://thescoop.org/sports-data-files/footballlogs24.csv\")\ncfb_pbp &lt;- cfb_pbp |&gt;\n  mutate(GameTick = as.character(Game))\n\ncfb_pbp_b10 &lt;- cfb_pbp |&gt;\n  filter(Conference == \"Big Ten Conference\") |&gt;\n  mutate(Month = month(Date),\n        (GameTick = as.character(Game))) |&gt;\n  group_by(Month, RushingAvg)\n\n\nThe Big Ten’s average rushing yards per rush attempts was 4.36 yards a carry. Maryland has hung around that average throughout the entire season. The Terps achieved their best rushing average at 5.4 yards in a win over UConn, but they’ve only hit that five-yard mark twice. Maryland has averages less than four yards a run in five contests, including a season-low 1.8 yards against Northwestern. The Terps have only been able to win once when averaging fewer than 4.3 rushing yards, and that was a win over Virginia.\nMaryland may be one of the most consistent teams in the conference in terms of its rushing average per game, but it doesn’t mean it’s working. The Terps have only been above the Big Ten’s average twice, both against an FCS team and a non-Power Four opponent. They primarily use the passing game to move the ball down the field, and aren’t concerned with utilzing their running game.\n\n\nCode\nggplot() + \n  geom_hline(yintercept=4.362821, color=\"blue\") + \n  geom_line(data=cfb_pbp_b10, aes(x=GameTick, y=RushingAvg, group=TeamFull)) + \n  scale_y_continuous(limits = c(-1.5, 9)) +\n  facet_wrap(~TeamFull) +\n  labs(\n    x=\"Games\", \n    y=\"Average Rushing Yards\", \n    title=\"Maryland falls behind the Big Ten's best rushing teams\", \n    subtitle=\"The Terps only topped the conference's average for rushing yards per game twice.\", \n    caption=\"Source: College Football Play-By-Play Data | By Matthew Neus\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ncfb_pbp_b10 |&gt;\n  group_by(Conference) |&gt;\n  summarise(mean(RushingAvg))\n\n\n# A tibble: 1 × 2\n  Conference         `mean(RushingAvg)`\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 Big Ten Conference               4.36\n\n\n\n\nCode\ncfb_pbp_b10 &lt;- cfb_pbp_b10 |&gt;\n  mutate(PassingAvg = PassingYds / PassingAtt)\n\ncfb_pbp_b10 |&gt;\n  group_by(Conference) |&gt;\n  summarise(mean(PassingAvg))\n\n\n# A tibble: 1 × 2\n  Conference         `mean(PassingAvg)`\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 Big Ten Conference               7.63\n\n\nRunning the football is a area of an offense only some teams excel at. Iowa heavily uses its running attack, while Maryland shy’s away from relying on its offensive line to move the ball.\nFor teams that can utilize their running game, it doesn’t always mean the offense will put up loads of points. Purdue averaged over eight yards a carry twice and only won one of the two. USC has gained over the Big Ten’s average on the ground in all but seven games, yet they sit with a record under .500.\nAn effective running game does not produce success in the Big Ten. Teams gain almost three less yards on average when running the ball compared to throwing the ball, as the conference average passing yards in 7.6 yards a throw.\nA lethal running attack is necessary for some teams to generate their offense, but teams shouldn’t solely rely on it to gain wins."
  },
  {
    "objectID": "posts/early-season/index.html",
    "href": "posts/early-season/index.html",
    "title": "Maryland’s Good Defense Can Lead It To a NCAA Tournament Birth",
    "section": "",
    "text": "Maryland men’s basketball began the season as well as coach Kevin Willard could have asked for. His star freshman recorded a 22 point, 20 rebound game, and the Terps won by 30.\nMaryland’s defense suffocated Manahattan, allowing it to record a 27 percent shooting percent. But the Terps’ offense didn’t shoot lights out in the 79-point display. They only shot 44 percent from the field.\nIt’s only one game, but last season’s shooting struggles might not have completely left this year’s group. But looking at previous Maryland sides, a good defense might do enough to ensure a season the ends in the NCAA tournament.\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\nlogs &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/dwillis.github.io/main/docs/sports-data-files/cbblogs1525.csv\")\nlogs &lt;- logs |&gt;\n  mutate(month = month(Date), year = year(Date)) \n\nearlysznlogs &lt;- logs |&gt;\n  filter(month == 11)\n\nmdearlysznlogs &lt;- logs |&gt;\n  group_by(Season) |&gt;\n  filter(Team == \"Maryland\" & month == 11) |&gt;\n  mutate(AvgFGPCT = mean(TeamFGPCT), AvgOPPFGPCT = mean(OpponentFGPCT))\n\nmd24 &lt;- mdearlysznlogs |&gt;\n  group_by(year, AvgFGPCT, AvgOPPFGPCT) |&gt;\n  filter(Season == \"2024-2025\") |&gt;\n  mutate(TotalGames = sum(Game), year = year(Date))\n\n\nmd &lt;- mdearlysznlogs |&gt;\n  group_by(year, AvgFGPCT, AvgOPPFGPCT) |&gt;\n  filter(Game == \"1\") |&gt;\n  filter(Season == \"2015-2016\" | Season == \"2016-2017\" | Season == \"2017-2018\" | Season == \"2018-2019\" | Season == \"2019-2020\" | Season == \"2020-2021\" | Season == \"2021-2022\" | Season == \"2022-2023\" | Season == \"2023-2024\") |&gt;\n  mutate(year = year(Date))\n\n\nIn early season games, which are just games played in November, Maryland averaged a shooting percentage of 47 percent and held their opponents to a 39 percent shooting percentage.\n\n\nCode\nmdearlysznlogs |&gt; \n  ungroup() |&gt; \n  summarise(\n    offense = mean(AvgFGPCT), \n    defense = mean(AvgOPPFGPCT)\n    )\n\n\n# A tibble: 1 × 2\n  offense defense\n    &lt;dbl&gt;   &lt;dbl&gt;\n1   0.473   0.394\n\n\nMaryland’s defensive effectiveness will be crucial when predicting if the Terps can return to the NCAA tournament. In the 2019-2020 season, Maryland’s opponents field goal percentage in November to 37 percent. In 2016-17, it was slighly higher at 39 percent. The Terps made the tourney in the 2016-2017 season, and was a lock for March Madness in 2019-2020. Even with lacking offensive shooting, Maryland found a way to succeed with great defense.\nThat carries over into years when Maryland begins well on both ends of the floor. The Terps made the tournament in 2022-23 with a 50 percent field goal percentage in November while keeping their opposition 38 percent. Maryland has made the NCAA tournament all but twice when keeping their opponents under 39 percent from the field, but it would have made it easily in a postponed 2019-20 campaign.\n\n\nCode\nlibrary(ggrepel)\n\nggplot() + \n  geom_point(\n    data=md24, \n    aes(x=AvgFGPCT, y=AvgOPPFGPCT, size=month),\n    color=\"gold\",\n    alpha=.5) +\n  geom_point(\n    data=md, \n    aes(x=AvgFGPCT, y=AvgOPPFGPCT, size=month), \n    color=\"red\") + \n  geom_vline(xintercept = .4727705) + \n  geom_hline(yintercept = .3937213) + \n  geom_text_repel(\n    data=md, \n    aes(x=AvgFGPCT, y=AvgOPPFGPCT, label=year)\n  ) +\n  labs(title=\"Will Maryland's defense get it back to the Big Dance?\", subtitle=\"The Terps' defense excelled in their season opener against Manhattan, but the offense has work to do\", caption=\"Source: NCAA | By Matthew Neus\")  + theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\n\n\nMaryland’s strong defensive start in 2024-25 can have fans believing of a NCAA tournament birth this season. The Terps’ defense has led them to the national tournament in years past despite a lackluster offensive shooting percentage.\nThe 2024-25 team could be a repeat of good defense leading to success. Although it’s only one game, a strong defensive performance limiting Manhattan in field goal percentage can predict another good defensive team this year. Previous Maryland teams have found success in preventing opponents from scoring, and this year’s team can do the same.\nMaryland’s offense wasn’t great in its season opener against Manhattan. It only scored 79 points and shot 44 percent from the field. But its defense was effienct, only allowing 49 points. Maryland may not shoot teams out of the gym, but it may smother teams into low scoring outputs. Based on past Maryland teams, that will lead to a NCAA tournament birth."
  },
  {
    "objectID": "posts/kevin-willard-teams/index.html",
    "href": "posts/kevin-willard-teams/index.html",
    "title": "…against same-level competition",
    "section": "",
    "text": "Teams led by Kevin Willard have experienced some success.\nHe led Seton Hall to the NCAA tournament in five different season and won over 200 games as the head coach. He made the national tournament in his first year at Maryland, but suffered a setback last season as Maryland missed the tourney.\nMany Willard teams experience success early in the season, blowing out inferior out-of-conference opponents. The wins do carry into conference play, but his teams play closer games against better opposition.\n\n\nCode\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(ggalt)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlogs &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/dwillis.github.io/main/docs/sports-data-files/cbblogs1525.csv\")\n\nshwillard &lt;- logs |&gt;\n  group_by(Season) |&gt;\n  filter(Team == \"Seton Hall\") |&gt;\n  filter(Season == \"2015-2016\" | Season == \"2016-2017\" | Season == \"2017-2018\" | Season == \"2018-2019\" | Season == \"2019-2020\" | Season == \"2020-2021\" | Season ==\"2021-2022\") |&gt;\n  mutate(AvgOppPPG = mean(OpponentScore), AvgPPG = mean(TeamScore), pdiff = TeamScore - OpponentScore)\n\nmdwillard &lt;- logs |&gt;\n  group_by(Season) |&gt;\n  filter(Team == \"Maryland\") |&gt;\n  filter(Season == \"2022-2023\" | Season == \"2023-2024\" | Season == \"2024-2025\") |&gt;\n  mutate(AvgOppPPG = mean(OpponentScore), AvgPPG = mean(TeamScore), pdiff = TeamScore - OpponentScore)\n\n\nOne of the metrics I like to look at when seeing if a team’s good record is because the team is good is strength of schedule. Of course, any team can beat another team in any game. But the strength of schedule metric allows us to see if teams consistently play tough opposition, or if they just win games against poor opponents.\nBoth Seton Hall and Maryland under Willard have played tough schedules. It helps that Seton Hall is in the Big East and Maryland is in the Big Ten, but quality nonconference foes appear on the schedules for both teams in multiple different years.\nBoth programs kept their season average for strength of schedule above 7.5 for each year Willard was the head coach. I’ve left out this current season’s strength of schedule for Maryland, since its only played three games.\n\n\nCode\nshwillardsos &lt;- shwillard |&gt;\n  group_by(Season) |&gt;\n  filter(Game == \"1\") |&gt;\n  summarise(TeamSOS)\n\nmdwillardsos &lt;- mdwillard |&gt;\n  group_by(Season) |&gt;\n  filter(Game == \"1\") |&gt;\n  filter(Season == \"2022-2023\" | Season == \"2023-2024\") |&gt;\n  summarise(TeamSOS)\n\nchart5 &lt;- ggplot() + \n  geom_bar(\n    data=shwillardsos, \n    aes(x=Season, weight=TeamSOS)\n  ) + \n  labs(\n    title=\"Seton Hall's strength of schedule...\",\n    subtitle = \"Under Kevin Willard, both Seton Hall and Maryland routinely play tough teams during the season\",\n    x=\"Season\", \n    y=\"Strength of Schedule\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n chart6 &lt;- ggplot() + \n  geom_bar(\n    data=mdwillardsos, \n    aes(x=Season, weight=TeamSOS)\n  ) + \n  labs(\n    title=\"...compared to Maryland's\", \n    x=\"Season\", \n    y=\"\") + \n  theme_minimal() +\n  scale_y_continuous(limits = c(0,10)) + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    ) \n \n plot_grid(chart6, chart5) +\n   coord_flip()\n\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\n\n\n\n\n\n\n\n\nWillard’s teams at Seton Hall almost mirror his sides at Maryland in how close the games are. At Seton Hall, Willard’s offense averaged just over 74 points from 2015 to the end of the 2021-22 season, while his defense gave up an average of 70 points. At Maryland, that gap is almost identical. Over his first three seasons, his Maryland teams have scored about 69 points a game while giving up an average of 65.\nWillard’s teams at Maryland, so far, haven’t been as good scoring the ball as previous Willard teams at Seton Hall. But they’ve been better at stopping their opposition from scoring. Although the scoring output is low for both teams, Willard teams have a tendency to win games by about four points at both Seton Hall and Maryland.\nTeams under Willard have been able to on average score more points than they give up. But the margins each season aren’t large, suggesting he coaches in a lot of close battles in both the Big East and the Big Ten.\n\n\nCode\nchart1 &lt;- ggplot() + \n  geom_dumbbell(\n    data=shwillard, \n    aes(y=Season, x=AvgPPG, xend=AvgOppPPG),\n    colour = \"grey\",\n    colour_x = \"blue\",\n    colour_xend = \"black\") +  \n  labs(title = \"Seton Hall point averages...\", subtitle= \"Seton Hall and Maryland teams under Willard averaged about five more points than their opponent\", x=\"AvgPPG & AvgOpponentPPG\", y=\"Season\",  caption=\"Source: NCAA | By Matthew Neus\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\nchart2 &lt;- ggplot() + \n  geom_dumbbell(\n    data=mdwillard, \n    aes(y=Season, x=AvgPPG, xend=AvgOppPPG),\n    colour = \"grey\",\n    colour_x = \"red\",\n    colour_xend = \"black\") +  \n  labs(title = \"...mirror Maryland\", subtitle= \"\", x=\"\", y=\"\",  caption=\"Source: NCAA | By Matthew Neus\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\nplot_grid(chart1, chart2) \n\n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\n\n\n\n\nKevin Willard likes to play good teams during the season at both Seton Hall and Maryland. The performance of his teams, in terms of scoring and defense, are similar. But that closeness is not felt throughout the entire season.\nThe point differential for Willard’s teams are scattered. But one trend that occurs during his years at both Seton Hall and Maryland is that his sides win big in early season contests, which is usually nonconference contests. There are occurrences where he loses games early in the season, like in 2018, but that game was against the Big Ten’s Nebraska.\nThe point differential when you move deeper into the season levels out to closer wins or losses. There is the occasional conference game where Maryland lost by a large margin, like when Maryland lost by 31 to Wisconsin last year, but there is a consistent trend of Willard teams winning by large amounts in early games to then playing closer games down the stretch.\nI’ve included the current season for Maryland to show that, like past Willard teams, there were large margins of victory in the opening set of games.\n\n\nCode\nchart3 &lt;- ggplot() + \n  geom_hline(yintercept=0.0, color=\"blue\") +\n  geom_line(data=shwillard, aes(x=Game, y=pdiff, group=Season)) + \n  scale_y_continuous(limits = c(-40,50)) + \n  facet_wrap(~Season) +  \n  labs(title = \"Seton Hall & Maryland win big early, play close late\", subtitle= \"Seton Hall and Maryland rack up nonconference victories, but games get closer in conference play\", x=\"Game\", y=\"Point Differential\",  caption=\"Source: NCAA | By Matthew Neus\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\nchart4 &lt;- ggplot() + \n  geom_hline(yintercept=0.0, color=\"red\") +\n  geom_line(data=mdwillard, aes(x=Game, y=pdiff, group=Season)) + \n  scale_y_continuous(limits = c(-40,50)) + \n  facet_wrap(~Season) +  \n  labs(title = \"\", subtitle= \"\", x=\"Game\", y=\"\",  caption=\"Source: NCAA | By Matthew Neus\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\nplot_grid(chart3, chart4)\n\n\n\n\n\n\n\n\n\nMaryland under Willard is very similar to Seton Hall coached by the same man. Both teams played teams on similar levels during each season he was at either program. His teams at both schools even averaged around the same difference between points scored and opponent’s points scored.\nWillard teams can be described as those that, on average, score more points than their opponents, but not by a big margin each season. They will start strong and rack up big wins in early-season matchups, but closer affairs will follow as the season goes on longer.\nWillard has found success at both Seton Hall and Maryland, taking both programs to the NCAA tournament. He’s done it through coaching teams through tough schedules and making sure his teams average more points than the teams he faces."
  }
]